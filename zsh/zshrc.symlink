# shortcut to this dotfiles path is $DOTFILES
export DOTFILES=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
if [ -d "$HOME/Christophe" ]; then
  export PROJECTS=$HOME/Christophe/code
else
  export PROJECTS=$HOME/code
fi

# all of our zsh files
typeset -U config_files
config_files=($DOTFILES/*/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  # time ( echo '------' ; echo "sourcing $file" ; source $file ; ) 2>&1
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  # time ( echo '------' ; echo "sourcing $file" ; source $file ; ) 2>&1
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
# code from gist https://gist.github.com/ctechols/ca1035271ad134841284
# On slow systems, checking the cached .zcompdump file to see if it must be
# regenerated adds a noticable delay to zsh startup.  This little hack restricts
# it to once a day.  It should be pasted into your own completion file.
#
# The globbing is a little complicated here:
# - '#q' is an explicit glob qualifier that makes globbing work within zsh's [[ ]] construct.
# - 'N' makes the glob pattern evaluate to nothing when it doesn't match (rather than throw a globbing error)
# - '.' matches "regular files"
# - 'mh+24' matches files (or directories or whatever) that are older than 24 hours.
autoload -Uz compinit
# Save the location of the current completion dump file.
if [ -z "$ZSH_COMPDUMP" ]; then
  ZSH_COMPDUMP="${ZDOTDIR:-${HOME}}/.zcompdump-${SHORT_HOST}-${ZSH_VERSION}"
fi
if [[ -n "${ZSH_COMPDUMP}"(#qN.mh+24) ]]; then
  compinit
  compdump
else
  compinit -C
fi;
# end code from gist

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  # time ( echo '------' ; echo "sourcing $file" ; source $file ; ) 2>&1
  source $file
done

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

unset config_files

# load rbenv
if [ -d "$HOME/.rbenv/bin" ]
then
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
fi

export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"  # Added by n-install (see http://git.io/n-install-repo).
